// Generated by CoffeeScript 1.12.5
(function() {
  var Search;

  Search = (function() {
    function Search(client) {
      this.client = client;
    }

    Search.prototype.issues = function(params, cb) {
      return this.client.get("/search/issues", params, function(err, s, b, h) {
        


        if (err) {
          //console.log("FED: with err " + err);
          return cb(err);
        }
        if (s !== 200) {
          //console.log("FED: with s " + s);

          return cb(new Error('Search issues error'));
        } else {
          //console.log("FED: with s " + s);
          //console.log("FED: with b " + b);
          //console.log("FED: with h " + h);

          return cb(null, b, h);
        }
      });
    };

    Search.prototype.repos = function(params, cb) {
      return this.client.get("/search/repositories", params, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error('Search repos error'));
        } else {
          return cb(null, b, h);
        }
      });
    };

    Search.prototype.users = function(params, cb) {
      return this.client.get("/search/users", params, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error('Search users error'));
        } else {
          return cb(null, b, h);
        }
      });
    };

    Search.prototype.code = function(params, cb) {
      return this.client.get("/search/code", params, function(err, s, b, h) {
        if (err) {
          return cb(err);
        }
        if (s !== 200) {
          return cb(new Error('Search email error'));
        } else {
          return cb(null, b, h);
        }
      });
    };

    return Search;

  })();

  module.exports = Search;

}).call(this);
